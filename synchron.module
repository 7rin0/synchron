<?php

  use Drupal\Core\Form\FormState;
  use Drupal\Core\Entity\EntityTypeInterface;
  use Drupal\Core\Field\BaseFieldDefinition;
  use \Drupal\node\Entity\Node;

  /**
   * Implements hook_install().
   */
  function synchron_install() {
    // Create field storage for the 'Highlight' base field.
    $entity_manager = \Drupal::entityManager();
    $definition = $entity_manager->getFieldStorageDefinitions('node')['synchronid'];
    $entity_manager->onFieldStorageDefinitionCreate($definition);
    \Drupal::entityManager()->clearCachedDefinitions();
    \Drupal::service('entity.definition_update_manager')->applyUpdates();
  }

  /**
   * Implements hook_uninstall().
   */
  function synchron_uninstall() {
    $entity_manager = \Drupal::entityManager();
    $definition = $entity_manager->getLastInstalledFieldStorageDefinitions('node')['synchronid'];
    $entity_manager->onFieldStorageDefinitionDelete($definition);
    \Drupal::entityManager()->clearCachedDefinitions();
    \Drupal::service('entity.definition_update_manager')->applyUpdates();
    // Delete All references to synchronid
    $query = \Drupal::entityQuery('node');
    $query->condition('synchronid', 'NULL', '!=');
    $entity_ids = $query->execute();

    foreach($entity_ids as $nid) {
      Node::load($nid)->set('synchronid', NULL)->save();
    }
  }
  
  function synchron_entity_base_field_info(\Drupal\Core\Entity\EntityTypeInterface $entity_type) {
    // TODO: DO we need to affect every single entity?*
    // Or filter on admin
    if ($entity_type->id() == 'node') {
      $fields = [];
      $fields['synchronid'] = BaseFieldDefinition::create('integer')
        ->setDefaultValue(0)
        ->setLabel('Shared ID by two synchronized entities');
      return $fields;
    }
  }
