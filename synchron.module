<?php

  use Drupal\Core\Form\FormState;
  use Drupal\Core\Database\Database;
  use Drupal\Core\Database\Connection;
  use Drupal\Component\DependencyInjection\Container;


  function synchron_form_alter(&$form, FormState $formstate) {

    // Set database connection to ixarm
    setConnectionDatabase('ixarm');
    print_r(getEntity());
    $loadNode = loadNode(11257);
    var_dump($loadNode->toArray());

    print_r('<--------------------------!!!!!!!-------------------------->');

    // Set database connection to ixarm achats
    setConnectionDatabase('ixarm_achats');
    print_r(getEntity());
    $loadNode = loadNode(11257);
    var_dump($loadNode->toArray());

    die();
  }

  function getEntity() {
    // Get entity
    $query = \Drupal::entityQuery('node');
    $query->condition('type', 'article');
    $entity_ids = $query->execute();
    return $entity_ids;
  }

  function setConnectionDatabase($databaseName) {
    // Get active current database service connection
    $getConnectionOptions = \Drupal::service('database')->getConnectionOptions();

    // Choose a database name
    // Use an admin form to handle the database name liste
    // Override default database name only because
    // This will work on the same server only
    $getConnectionOptions['database'] = $databaseName;

    // Return the good PDO object to this connection
    $pdoConnection = \Drupal::service('database')->open($getConnectionOptions);

    // Override the service by passing new values to connection construct
    \Drupal::service('database')->__construct($pdoConnection, $getConnectionOptions);
  }

  function loadNode($nid) {
    \Drupal::entityManager()->getStorage('node')->resetCache(array($nid));
    return \Drupal\node\Entity\Node::load($nid);
  }
